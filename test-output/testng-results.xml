<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="49" passed="42" failed="6" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-08-20T10:29:29Z" name="LinkedInTests_myConnectionsSuite" finished-at="2021-08-20T10:30:33Z" duration-ms="63261">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:29:29Z" name="LinkedInTests_myConnectionsTest" finished-at="2021-08-20T10:30:33Z" duration-ms="63261">
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@59af0466]" started-at="2021-08-20T16:00:14Z" name="launchCap" finished-at="2021-08-20T16:00:28Z" duration-ms="14102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@59af0466]" started-at="2021-08-20T16:00:28Z" name="copyTrakBytes" finished-at="2021-08-20T16:00:32Z" duration-ms="3874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@59af0466]" started-at="2021-08-20T16:00:32Z" name="restart" finished-at="2021-08-20T16:00:33Z" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@59af0466] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@34f7cfd9]" started-at="2021-08-20T15:59:29Z" name="launchCap" finished-at="2021-08-20T15:59:42Z" duration-ms="12052" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@34f7cfd9]" started-at="2021-08-20T15:59:42Z" name="copyTrakBytes" finished-at="2021-08-20T15:59:45Z" duration-ms="3933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@34f7cfd9]" started-at="2021-08-20T15:59:45Z" name="restart" finished-at="2021-08-20T15:59:46Z" duration-ms="433" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@34f7cfd9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
      <class name="iiitd.nrl.evalapp.LinkedInTests_myConnections">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests_myConnections@65f095f8]" started-at="2021-08-20T15:59:46Z" name="launchCap" finished-at="2021-08-20T16:00:01Z" duration-ms="15237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="myConnections()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests_myConnections@65f095f8]" started-at="2021-08-20T16:00:01Z" name="myConnections" finished-at="2021-08-20T16:00:14Z" duration-ms="12726" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myConnections -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests_myConnections@65f095f8]" started-at="2021-08-20T16:00:14Z" name="restart" finished-at="2021-08-20T16:00:14Z" duration-ms="512" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=myConnections status=SUCCESS method=LinkedInTests_myConnections.myConnections()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests_myConnections@65f095f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.LinkedInTests_myConnections -->
    </test> <!-- LinkedInTests_myConnectionsTest -->
  </suite> <!-- LinkedInTests_myConnectionsSuite -->
  <suite started-at="2021-08-20T10:24:38Z" name="GoogleMapsSuite" finished-at="2021-08-20T10:25:45Z" duration-ms="67038">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:24:38Z" name="GoogleMapsTest" finished-at="2021-08-20T10:25:45Z" duration-ms="67038">
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2177849e]" started-at="2021-08-20T15:55:25Z" name="launchCap" finished-at="2021-08-20T15:55:41Z" duration-ms="15671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2177849e]" started-at="2021-08-20T15:55:41Z" name="copyTrakBytes" finished-at="2021-08-20T15:55:45Z" duration-ms="3924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2177849e]" started-at="2021-08-20T15:55:45Z" name="restart" finished-at="2021-08-20T15:55:45Z" duration-ms="402" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2177849e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.GoogleMapsTest">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.GoogleMapsTest@3541cb24]" started-at="2021-08-20T15:54:54Z" name="launchCap" finished-at="2021-08-20T15:55:09Z" duration-ms="15242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="searchPlace()[pri:0, instance:iiitd.nrl.evalapp.GoogleMapsTest@3541cb24]" started-at="2021-08-20T15:55:09Z" name="searchPlace" finished-at="2021-08-20T15:55:25Z" duration-ms="15504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchPlace -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.GoogleMapsTest@3541cb24]" started-at="2021-08-20T15:55:25Z" name="restart" finished-at="2021-08-20T15:55:25Z" duration-ms="525" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchPlace status=SUCCESS method=GoogleMapsTest.searchPlace()[pri:0, instance:iiitd.nrl.evalapp.GoogleMapsTest@3541cb24] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.GoogleMapsTest -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@52102734]" started-at="2021-08-20T15:54:38Z" name="launchCap" finished-at="2021-08-20T15:54:50Z" duration-ms="11496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@52102734]" started-at="2021-08-20T15:54:50Z" name="copyTrakBytes" finished-at="2021-08-20T15:54:54Z" duration-ms="3902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@52102734]" started-at="2021-08-20T15:54:54Z" name="restart" finished-at="2021-08-20T15:54:54Z" duration-ms="370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@52102734] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
    </test> <!-- GoogleMapsTest -->
  </suite> <!-- GoogleMapsSuite -->
  <suite started-at="2021-08-20T10:36:29Z" name="TelegramTestsSuite" finished-at="2021-08-20T10:37:24Z" duration-ms="55501">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:36:29Z" name="TelegramTestsTest" finished-at="2021-08-20T10:37:24Z" duration-ms="55501">
      <class name="iiitd.nrl.evalapp.TelegramTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TelegramTests@a3d8174]" started-at="2021-08-20T16:06:45Z" name="launchCap" finished-at="2021-08-20T16:06:58Z" duration-ms="12735" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="sendMessage()[pri:0, instance:iiitd.nrl.evalapp.TelegramTests@a3d8174]" started-at="2021-08-20T16:06:58Z" name="sendMessage" finished-at="2021-08-20T16:07:07Z" duration-ms="9328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMessage -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TelegramTests@a3d8174]" started-at="2021-08-20T16:07:07Z" name="restart" finished-at="2021-08-20T16:07:07Z" duration-ms="627" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sendMessage status=SUCCESS method=TelegramTests.sendMessage()[pri:0, instance:iiitd.nrl.evalapp.TelegramTests@a3d8174] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TelegramTests -->
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@1ba9117e]" started-at="2021-08-20T16:07:07Z" name="launchCap" finished-at="2021-08-20T16:07:20Z" duration-ms="12483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@1ba9117e]" started-at="2021-08-20T16:07:20Z" name="copyTrakBytes" finished-at="2021-08-20T16:07:24Z" duration-ms="3948" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@1ba9117e]" started-at="2021-08-20T16:07:24Z" name="restart" finished-at="2021-08-20T16:07:24Z" duration-ms="394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@1ba9117e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@44821a96]" started-at="2021-08-20T16:06:29Z" name="launchCap" finished-at="2021-08-20T16:06:40Z" duration-ms="11687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@44821a96]" started-at="2021-08-20T16:06:40Z" name="copyTrakBytes" finished-at="2021-08-20T16:06:44Z" duration-ms="3900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@44821a96]" started-at="2021-08-20T16:06:44Z" name="restart" finished-at="2021-08-20T16:06:45Z" duration-ms="397" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@44821a96] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
    </test> <!-- TelegramTestsTest -->
  </suite> <!-- TelegramTestsSuite -->
  <suite started-at="2021-08-20T10:27:03Z" name="HotstarTests_searchSuite" finished-at="2021-08-20T10:28:18Z" duration-ms="74211">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:27:03Z" name="HotstarTests_searchTest" finished-at="2021-08-20T10:28:18Z" duration-ms="74211">
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@770d3326]" started-at="2021-08-20T15:57:56Z" name="launchCap" finished-at="2021-08-20T15:58:13Z" duration-ms="16831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@770d3326]" started-at="2021-08-20T15:58:13Z" name="copyTrakBytes" finished-at="2021-08-20T15:58:17Z" duration-ms="3897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@770d3326]" started-at="2021-08-20T15:58:17Z" name="restart" finished-at="2021-08-20T15:58:18Z" duration-ms="392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@770d3326] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@6a370f4]" started-at="2021-08-20T15:57:03Z" name="launchCap" finished-at="2021-08-20T15:57:16Z" duration-ms="13048" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@6a370f4]" started-at="2021-08-20T15:57:16Z" name="copyTrakBytes" finished-at="2021-08-20T15:57:20Z" duration-ms="3864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@6a370f4]" started-at="2021-08-20T15:57:20Z" name="restart" finished-at="2021-08-20T15:57:21Z" duration-ms="370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@6a370f4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
      <class name="iiitd.nrl.evalapp.HotstarTests_search">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests_search@2abf4075]" started-at="2021-08-20T15:57:21Z" name="launchCap" finished-at="2021-08-20T15:57:35Z" duration-ms="14410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="searchTest()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests_search@2abf4075]" started-at="2021-08-20T15:57:35Z" name="searchTest" finished-at="2021-08-20T15:57:56Z" duration-ms="20815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.HotstarTests_search@2abf4075]" started-at="2021-08-20T15:57:56Z" name="restart" finished-at="2021-08-20T15:57:56Z" duration-ms="583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchTest status=SUCCESS method=HotstarTests_search.searchTest()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests_search@2abf4075] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.HotstarTests_search -->
    </test> <!-- HotstarTests_searchTest -->
  </suite> <!-- HotstarTests_searchSuite -->
  <suite started-at="2021-08-20T10:23:03Z" name="Flipkart_TestSuite" finished-at="2021-08-20T10:24:38Z" duration-ms="95703">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:23:03Z" name="Flipkart_TestTest" finished-at="2021-08-20T10:24:38Z" duration-ms="95703">
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@46fa7c39]" started-at="2021-08-20T15:54:20Z" name="launchCap" finished-at="2021-08-20T15:54:34Z" duration-ms="14100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@46fa7c39]" started-at="2021-08-20T15:54:34Z" name="copyTrakBytes" finished-at="2021-08-20T15:54:38Z" duration-ms="3833" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@46fa7c39]" started-at="2021-08-20T15:54:38Z" name="restart" finished-at="2021-08-20T15:54:38Z" duration-ms="416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@46fa7c39] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@41c2284a]" started-at="2021-08-20T15:53:03Z" name="launchCap" finished-at="2021-08-20T15:53:14Z" duration-ms="11181" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@41c2284a]" started-at="2021-08-20T15:53:14Z" name="copyTrakBytes" finished-at="2021-08-20T15:53:18Z" duration-ms="3942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@41c2284a]" started-at="2021-08-20T15:53:18Z" name="restart" finished-at="2021-08-20T15:53:18Z" duration-ms="347" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@41c2284a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
      <class name="iiitd.nrl.evalapp.FlipkartTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.FlipkartTests@53aad5d5]" started-at="2021-08-20T15:53:18Z" name="launchCap" finished-at="2021-08-20T15:53:30Z" duration-ms="12221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="getProduct()[pri:0, instance:iiitd.nrl.evalapp.FlipkartTests@53aad5d5]" started-at="2021-08-20T15:53:30Z" name="getProduct" finished-at="2021-08-20T15:54:19Z" duration-ms="48985" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getProduct -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.FlipkartTests@53aad5d5]" started-at="2021-08-20T15:54:19Z" name="restart" finished-at="2021-08-20T15:54:20Z" duration-ms="677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getProduct status=SUCCESS method=FlipkartTests.getProduct()[pri:0, instance:iiitd.nrl.evalapp.FlipkartTests@53aad5d5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.FlipkartTests -->
    </test> <!-- Flipkart_TestTest -->
  </suite> <!-- Flipkart_TestSuite -->
  <suite started-at="2021-08-20T10:37:24Z" name="WhatsappTestsSuite" finished-at="2021-08-20T10:38:30Z" duration-ms="65500">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:37:24Z" name="WhatsappTestsTest" finished-at="2021-08-20T10:38:30Z" duration-ms="65500">
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2accdbb5]" started-at="2021-08-20T16:08:11Z" name="launchCap" finished-at="2021-08-20T16:08:25Z" duration-ms="14286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2accdbb5]" started-at="2021-08-20T16:08:25Z" name="copyTrakBytes" finished-at="2021-08-20T16:08:29Z" duration-ms="3898" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2accdbb5]" started-at="2021-08-20T16:08:29Z" name="restart" finished-at="2021-08-20T16:08:30Z" duration-ms="416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2accdbb5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@cad498c]" started-at="2021-08-20T16:07:24Z" name="launchCap" finished-at="2021-08-20T16:07:36Z" duration-ms="11579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@cad498c]" started-at="2021-08-20T16:07:36Z" name="copyTrakBytes" finished-at="2021-08-20T16:07:40Z" duration-ms="3925" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@cad498c]" started-at="2021-08-20T16:07:40Z" name="restart" finished-at="2021-08-20T16:07:40Z" duration-ms="370" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@cad498c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
      <class name="iiitd.nrl.evalapp.WhatsappTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.WhatsappTests@1e6454ec]" started-at="2021-08-20T16:07:40Z" name="launchCap" finished-at="2021-08-20T16:07:53Z" duration-ms="12649" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="sendMessage()[pri:0, instance:iiitd.nrl.evalapp.WhatsappTests@1e6454ec]" started-at="2021-08-20T16:07:53Z" name="sendMessage" finished-at="2021-08-20T16:08:11Z" duration-ms="17906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMessage -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.WhatsappTests@1e6454ec]" started-at="2021-08-20T16:08:11Z" name="restart" finished-at="2021-08-20T16:08:11Z" duration-ms="469" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sendMessage status=SUCCESS method=WhatsappTests.sendMessage()[pri:0, instance:iiitd.nrl.evalapp.WhatsappTests@1e6454ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.WhatsappTests -->
    </test> <!-- WhatsappTestsTest -->
  </suite> <!-- WhatsappTestsSuite -->
  <suite started-at="2021-08-20T10:17:30Z" name="Amazon_TestSuite" finished-at="2021-08-20T10:20:00Z" duration-ms="150129">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:17:30Z" name="Amazon_TestTest" finished-at="2021-08-20T10:20:00Z" duration-ms="150129">
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@3943a2be]" started-at="2021-08-20T15:49:41Z" name="launchCap" finished-at="2021-08-20T15:49:55Z" duration-ms="14089" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@3943a2be]" started-at="2021-08-20T15:49:55Z" name="copyTrakBytes" finished-at="2021-08-20T15:49:59Z" duration-ms="3987" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@3943a2be]" started-at="2021-08-20T15:49:59Z" name="restart" finished-at="2021-08-20T15:50:00Z" duration-ms="842" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@3943a2be] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.AmazonTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.AmazonTests@28975c28]" started-at="2021-08-20T15:47:45Z" name="launchCap" finished-at="2021-08-20T15:47:59Z" duration-ms="13890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="searchProduct()[pri:0, instance:iiitd.nrl.evalapp.AmazonTests@28975c28]" started-at="2021-08-20T15:47:59Z" name="searchProduct" finished-at="2021-08-20T15:49:40Z" duration-ms="101211" status="FAIL">
          <exception class="org.openqa.selenium.StaleElementReferenceException">
            <message>
              <![CDATA[androidx.test.uiautomator.StaleObjectException
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-FU6EMRP', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.12'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.amazon.mShop.android.ho..., appPackage: in.amazon.mShop.android.sho..., autoAcceptAlerts: true, autoGrantPermissions: true, databaseEnabled: false, desired: {appActivity: com.amazon.mShop.android.ho..., appPackage: in.amazon.mShop.android.sho..., autoAcceptAlerts: true, autoGrantPermissions: true, fullReset: false, noReset: true, platformName: android, uiautomator2ServerInstallTimeout: 60000}, deviceApiLevel: 26, deviceManufacturer: Lenovo, deviceModel: A6020a40, deviceName: 1578fc7b, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: 1578fc7b, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, noReset: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 8.0.0, statBarHeight: 48, takesScreenshot: true, uiautomator2ServerInstallTimeout: 60000, viewportRect: {height: 1232, left: 0, top: 48, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: e14af000-7695-45fa-9fc7-f4e1d1c7b651]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.StaleElementReferenceException: androidx.test.uiautomator.StaleObjectException
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/stale_element_reference.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-FU6EMRP', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.12'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.amazon.mShop.android.ho..., appPackage: in.amazon.mShop.android.sho..., autoAcceptAlerts: true, autoGrantPermissions: true, databaseEnabled: false, desired: {appActivity: com.amazon.mShop.android.ho..., appPackage: in.amazon.mShop.android.sho..., autoAcceptAlerts: true, autoGrantPermissions: true, fullReset: false, noReset: true, platformName: android, uiautomator2ServerInstallTimeout: 60000}, deviceApiLevel: 26, deviceManufacturer: Lenovo, deviceModel: A6020a40, deviceName: 1578fc7b, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: 1578fc7b, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, noReset: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 8.0.0, statBarHeight: 48, takesScreenshot: true, uiautomator2ServerInstallTimeout: 60000, viewportRect: {height: 1232, left: 0, top: 48, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: e14af000-7695-45fa-9fc7-f4e1d1c7b651
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
	at io.appium.java_client.DefaultGenericMobileElement.execute(DefaultGenericMobileElement.java:45)
	at io.appium.java_client.MobileElement.execute(MobileElement.java:1)
	at io.appium.java_client.android.AndroidElement.execute(AndroidElement.java:1)
	at org.openqa.selenium.remote.RemoteWebElement.getText(RemoteWebElement.java:166)
	at iiitd.nrl.evalapp.AmazonTests.searchProduct(AmazonTests.java:149)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at iiitd.nrl.evalapp.MainLauncher.main(MainLauncher.java:237)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.StaleElementReferenceException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchProduct -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.AmazonTests@28975c28]" started-at="2021-08-20T15:49:40Z" name="restart" finished-at="2021-08-20T15:49:41Z" duration-ms="910" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchProduct status=FAILURE method=AmazonTests.searchProduct()[pri:0, instance:iiitd.nrl.evalapp.AmazonTests@28975c28] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="update()[pri:0, instance:iiitd.nrl.evalapp.AmazonTests@28975c28]" started-at="2021-08-20T15:49:41Z" name="update" finished-at="2021-08-20T15:49:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
      </class> <!-- iiitd.nrl.evalapp.AmazonTests -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@ba54932]" started-at="2021-08-20T15:47:30Z" name="launchCap" finished-at="2021-08-20T15:47:41Z" duration-ms="10965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@ba54932]" started-at="2021-08-20T15:47:41Z" name="copyTrakBytes" finished-at="2021-08-20T15:47:45Z" duration-ms="3903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@ba54932]" started-at="2021-08-20T15:47:45Z" name="restart" finished-at="2021-08-20T15:47:45Z" duration-ms="330" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@ba54932] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
    </test> <!-- Amazon_TestTest -->
  </suite> <!-- Amazon_TestSuite -->
  <suite started-at="2021-08-20T10:14:33Z" name="FacebookTests_searchSuite" finished-at="2021-08-20T10:17:30Z" duration-ms="177109">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:14:33Z" name="FacebookTests_searchTest" finished-at="2021-08-20T10:17:30Z" duration-ms="177109">
      <class name="iiitd.nrl.evalapp.FacebookTestsP_Search">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.FacebookTestsP_Search@50caa560]" started-at="2021-08-20T15:44:48Z" name="launchCap" finished-at="2021-08-20T15:44:59Z" duration-ms="11258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="searchPerson()[pri:0, instance:iiitd.nrl.evalapp.FacebookTestsP_Search@50caa560]" started-at="2021-08-20T15:44:59Z" name="searchPerson" finished-at="2021-08-20T15:47:13Z" duration-ms="133536" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.AndroidUIAutomator: new UiSelector().descriptionContains("Profile picture") (tried for 120 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.AndroidUIAutomator: new UiSelector().descriptionContains("Profile picture") (tried for 120 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
	at iiitd.nrl.evalapp.FacebookTestsP_Search.searchPerson(FacebookTestsP_Search.java:129)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at iiitd.nrl.evalapp.MainLauncher.main(MainLauncher.java:237)
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-FU6EMRP', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.12'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.facebook.katana.activit..., appPackage: com.facebook.katana, autoAcceptAlerts: true, autoGrantPermissions: true, databaseEnabled: false, desired: {appActivity: com.facebook.katana.activit..., appPackage: com.facebook.katana, autoAcceptAlerts: true, autoGrantPermissions: true, fullReset: false, noReset: true, platformName: android, uiautomator2ServerInstallTimeout: 60000}, deviceApiLevel: 26, deviceManufacturer: Lenovo, deviceModel: A6020a40, deviceName: 1578fc7b, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: 1578fc7b, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, noReset: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 8.0.0, statBarHeight: 48, takesScreenshot: true, uiautomator2ServerInstallTimeout: 60000, viewportRect: {height: 1232, left: 0, top: 48, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: 6c8924af-7b74-4f02-bc61-42492b36b848
*** Element info: {Using=-android uiautomator, value=new UiSelector().descriptionContains("Profile picture")}
	at jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at io.appium.java_client.FindsByAndroidUIAutomator.findElementByAndroidUIAutomator(FindsByAndroidUIAutomator.java:38)
	at io.appium.java_client.MobileBy$ByAndroidUIAutomator.findElement(MobileBy.java:210)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
	... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchPerson -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.FacebookTestsP_Search@50caa560]" started-at="2021-08-20T15:47:13Z" name="restart" finished-at="2021-08-20T15:47:13Z" duration-ms="521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchPerson status=FAILURE method=FacebookTestsP_Search.searchPerson()[pri:0, instance:iiitd.nrl.evalapp.FacebookTestsP_Search@50caa560] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.FacebookTestsP_Search -->
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2a266d09]" started-at="2021-08-20T15:47:13Z" name="launchCap" finished-at="2021-08-20T15:47:25Z" duration-ms="11983" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2a266d09]" started-at="2021-08-20T15:47:25Z" name="copyTrakBytes" finished-at="2021-08-20T15:47:29Z" duration-ms="3941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2a266d09]" started-at="2021-08-20T15:47:29Z" name="restart" finished-at="2021-08-20T15:47:30Z" duration-ms="356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2a266d09] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@568ff82]" started-at="2021-08-20T15:44:33Z" name="launchCap" finished-at="2021-08-20T15:44:44Z" duration-ms="11229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@568ff82]" started-at="2021-08-20T15:44:44Z" name="copyTrakBytes" finished-at="2021-08-20T15:44:48Z" duration-ms="3926" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@568ff82]" started-at="2021-08-20T15:44:48Z" name="restart" finished-at="2021-08-20T15:44:48Z" duration-ms="354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@568ff82] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
    </test> <!-- FacebookTests_searchTest -->
  </suite> <!-- FacebookTests_searchSuite -->
  <suite started-at="2021-08-20T10:28:18Z" name="HotstarTests_trendingSuite" finished-at="2021-08-20T10:29:29Z" duration-ms="71859">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:28:18Z" name="HotstarTests_trendingTest" finished-at="2021-08-20T10:29:29Z" duration-ms="71859">
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2e222612]" started-at="2021-08-20T15:59:13Z" name="launchCap" finished-at="2021-08-20T15:59:25Z" duration-ms="12234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2e222612]" started-at="2021-08-20T15:59:25Z" name="copyTrakBytes" finished-at="2021-08-20T15:59:29Z" duration-ms="3900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2e222612]" started-at="2021-08-20T15:59:29Z" name="restart" finished-at="2021-08-20T15:59:29Z" duration-ms="412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@2e222612] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.HotstarTests_trending">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests_trending@3246fb96]" started-at="2021-08-20T15:58:39Z" name="launchCap" finished-at="2021-08-20T15:58:39Z" duration-ms="0" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at iiitd.nrl.evalapp.MyDatabase.addTestResult(MyDatabase.java:138)
	at iiitd.nrl.evalapp.HotstarTests_trending.launchCap(HotstarTests_trending.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:590)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at iiitd.nrl.evalapp.MainLauncher.main(MainLauncher.java:237)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="trendingTest()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests_trending@3246fb96]" started-at="2021-08-20T15:59:13Z" name="trendingTest" finished-at="2021-08-20T15:59:13Z" duration-ms="1" status="SKIP">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at iiitd.nrl.evalapp.MyDatabase.addTestResult(MyDatabase.java:138)
	at iiitd.nrl.evalapp.HotstarTests_trending.launchCap(HotstarTests_trending.java:62)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:515)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:217)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:590)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at iiitd.nrl.evalapp.MainLauncher.main(MainLauncher.java:237)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trendingTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.HotstarTests_trending@3246fb96]" started-at="2021-08-20T15:59:13Z" name="restart" finished-at="2021-08-20T15:59:13Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.HotstarTests_trending -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@77eca502]" started-at="2021-08-20T15:58:18Z" name="launchCap" finished-at="2021-08-20T15:58:35Z" duration-ms="16997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@77eca502]" started-at="2021-08-20T15:58:35Z" name="copyTrakBytes" finished-at="2021-08-20T15:58:39Z" duration-ms="3917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@77eca502]" started-at="2021-08-20T15:58:39Z" name="restart" finished-at="2021-08-20T15:58:39Z" duration-ms="361" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@77eca502] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
    </test> <!-- HotstarTests_trendingTest -->
  </suite> <!-- HotstarTests_trendingSuite -->
  <suite started-at="2021-08-20T10:20:00Z" name="Dailyhunt_TestSuite" finished-at="2021-08-20T10:23:03Z" duration-ms="182714">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:20:00Z" name="Dailyhunt_TestTest" finished-at="2021-08-20T10:23:03Z" duration-ms="182714">
      <class name="iiitd.nrl.evalapp.DailyhuntTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.DailyhuntTests@87a85e1]" started-at="2021-08-20T15:50:16Z" name="launchCap" finished-at="2021-08-20T15:50:32Z" duration-ms="16376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="searchNews()[pri:0, instance:iiitd.nrl.evalapp.DailyhuntTests@87a85e1]" started-at="2021-08-20T15:50:32Z" name="searchNews" finished-at="2021-08-20T15:52:45Z" duration-ms="132657" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.id: com.eterno:id/search_box (tried for 120 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.id: com.eterno:id/search_box (tried for 120 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
	at iiitd.nrl.evalapp.DailyhuntTests.searchNews(DailyhuntTests.java:104)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at iiitd.nrl.evalapp.MainLauncher.main(MainLauncher.java:237)
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-FU6EMRP', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.12'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.newshunt.appview.common..., appPackage: com.eterno, autoAcceptAlerts: true, autoGrantPermissions: true, databaseEnabled: false, desired: {appActivity: com.newshunt.appview.common..., appPackage: com.eterno, autoAcceptAlerts: true, autoGrantPermissions: true, fullReset: false, noReset: true, platformName: android, uiautomator2ServerInstallTimeout: 60000}, deviceApiLevel: 26, deviceManufacturer: Lenovo, deviceModel: A6020a40, deviceName: 1578fc7b, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: 1578fc7b, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, noReset: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 8.0.0, statBarHeight: 48, takesScreenshot: true, uiautomator2ServerInstallTimeout: 60000, viewportRect: {height: 1232, left: 0, top: 48, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: ddf66ab9-8dfd-4ac2-be9c-2b58f577c38f
*** Element info: {Using=id, value=com.eterno:id/search_box}
	at jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
	at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:69)
	at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElementById(AndroidDriver.java:1)
	at org.openqa.selenium.By$ById.findElement(By.java:188)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
	... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchNews -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.DailyhuntTests@87a85e1]" started-at="2021-08-20T15:52:45Z" name="restart" finished-at="2021-08-20T15:52:45Z" duration-ms="458" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchNews status=FAILURE method=DailyhuntTests.searchNews()[pri:0, instance:iiitd.nrl.evalapp.DailyhuntTests@87a85e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.DailyhuntTests -->
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@671a5887]" started-at="2021-08-20T15:52:45Z" name="launchCap" finished-at="2021-08-20T15:52:58Z" duration-ms="12764" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@671a5887]" started-at="2021-08-20T15:52:58Z" name="copyTrakBytes" finished-at="2021-08-20T15:53:02Z" duration-ms="4340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@671a5887]" started-at="2021-08-20T15:53:02Z" name="restart" finished-at="2021-08-20T15:53:03Z" duration-ms="410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@671a5887] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@36d585c]" started-at="2021-08-20T15:50:00Z" name="launchCap" finished-at="2021-08-20T15:50:11Z" duration-ms="11382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@36d585c]" started-at="2021-08-20T15:50:11Z" name="copyTrakBytes" finished-at="2021-08-20T15:50:15Z" duration-ms="3916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@36d585c]" started-at="2021-08-20T15:50:15Z" name="restart" finished-at="2021-08-20T15:50:16Z" duration-ms="407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@36d585c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
    </test> <!-- Dailyhunt_TestTest -->
  </suite> <!-- Dailyhunt_TestSuite -->
  <suite started-at="2021-08-20T10:33:31Z" name="LinkedInTests_searchSuite" finished-at="2021-08-20T10:36:29Z" duration-ms="177876">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:33:31Z" name="LinkedInTests_searchTest" finished-at="2021-08-20T10:36:29Z" duration-ms="177876">
      <class name="iiitd.nrl.evalapp.LinkedInTests_search">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests_search@5fd4f8f5]" started-at="2021-08-20T16:03:46Z" name="launchCap" finished-at="2021-08-20T16:03:59Z" duration-ms="13354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="searchPerson()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests_search@5fd4f8f5]" started-at="2021-08-20T16:03:59Z" name="searchPerson" finished-at="2021-08-20T16:06:12Z" duration-ms="132237" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.id: com.linkedin.android:id/profile_top_card_profile_picture (tried for 120 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.id: com.linkedin.android:id/profile_top_card_profile_picture (tried for 120 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
	at iiitd.nrl.evalapp.LinkedInTests_search.searchPerson(LinkedInTests_search.java:100)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at iiitd.nrl.evalapp.MainLauncher.main(MainLauncher.java:237)
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-FU6EMRP', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.12'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.linkedin.android.authen..., appPackage: com.linkedin.android, autoAcceptAlerts: true, autoGrantPermissions: true, databaseEnabled: false, desired: {appActivity: com.linkedin.android.authen..., appPackage: com.linkedin.android, autoAcceptAlerts: true, autoGrantPermissions: true, fullReset: false, noReset: true, platformName: android, uiautomator2ServerInstallTimeout: 60000}, deviceApiLevel: 26, deviceManufacturer: Lenovo, deviceModel: A6020a40, deviceName: 1578fc7b, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: 1578fc7b, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, noReset: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 8.0.0, statBarHeight: 48, takesScreenshot: true, uiautomator2ServerInstallTimeout: 60000, viewportRect: {height: 1232, left: 0, top: 48, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: feca341f-9206-40be-a1ef-05a45f416741
*** Element info: {Using=id, value=com.linkedin.android:id/profile_top_card_profile_picture}
	at jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
	at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:69)
	at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElementById(AndroidDriver.java:1)
	at org.openqa.selenium.By$ById.findElement(By.java:188)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
	... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchPerson -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests_search@5fd4f8f5]" started-at="2021-08-20T16:06:12Z" name="restart" finished-at="2021-08-20T16:06:12Z" duration-ms="503" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchPerson status=FAILURE method=LinkedInTests_search.searchPerson()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests_search@5fd4f8f5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.LinkedInTests_search -->
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@696da30b]" started-at="2021-08-20T16:06:12Z" name="launchCap" finished-at="2021-08-20T16:06:24Z" duration-ms="12168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@696da30b]" started-at="2021-08-20T16:06:24Z" name="copyTrakBytes" finished-at="2021-08-20T16:06:28Z" duration-ms="3890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@696da30b]" started-at="2021-08-20T16:06:28Z" name="restart" finished-at="2021-08-20T16:06:29Z" duration-ms="379" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@696da30b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@72cde7cc]" started-at="2021-08-20T16:03:31Z" name="launchCap" finished-at="2021-08-20T16:03:42Z" duration-ms="10997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@72cde7cc]" started-at="2021-08-20T16:03:42Z" name="copyTrakBytes" finished-at="2021-08-20T16:03:46Z" duration-ms="3985" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@72cde7cc]" started-at="2021-08-20T16:03:46Z" name="restart" finished-at="2021-08-20T16:03:46Z" duration-ms="363" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@72cde7cc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
    </test> <!-- LinkedInTests_searchTest -->
  </suite> <!-- LinkedInTests_searchSuite -->
  <suite started-at="2021-08-20T10:39:45Z" name="Youtube_PlayVideoSuite" finished-at="2021-08-20T10:42:48Z" duration-ms="182403">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:39:45Z" name="Youtube_PlayVideoTest" finished-at="2021-08-20T10:42:48Z" duration-ms="182403">
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@6a84a97d]" started-at="2021-08-20T16:12:30Z" name="launchCap" finished-at="2021-08-20T16:12:44Z" duration-ms="13481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@6a84a97d]" started-at="2021-08-20T16:12:44Z" name="copyTrakBytes" finished-at="2021-08-20T16:12:47Z" duration-ms="3920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@6a84a97d]" started-at="2021-08-20T16:12:47Z" name="restart" finished-at="2021-08-20T16:12:48Z" duration-ms="423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@6a84a97d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.YouTubeTests_PlayVideo">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.YouTubeTests_PlayVideo@48974e45]" started-at="2021-08-20T16:10:05Z" name="launchCap" finished-at="2021-08-20T16:10:21Z" duration-ms="16088" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="playTest()[pri:0, instance:iiitd.nrl.evalapp.YouTubeTests_PlayVideo@48974e45]" started-at="2021-08-20T16:10:21Z" name="playTest" finished-at="2021-08-20T16:12:29Z" duration-ms="128092" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for presence of element located by: By.AndroidUIAutomator: new UiScrollable(new UiSelector().scrollable(true)).scrollIntoView(new UiSelector().descriptionContains("Official Trailer")); (tried for 120 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for presence of element located by: By.AndroidUIAutomator: new UiScrollable(new UiSelector().scrollable(true)).scrollIntoView(new UiSelector().descriptionContains("Official Trailer")); (tried for 120 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
	at iiitd.nrl.evalapp.YouTubeTests_PlayVideo.playTest(YouTubeTests_PlayVideo.java:126)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at iiitd.nrl.evalapp.MainLauncher.main(MainLauncher.java:237)
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-FU6EMRP', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.12'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.google.android.youtube...., appPackage: com.google.android.youtube, autoAcceptAlerts: true, autoGrantPermissions: true, databaseEnabled: false, desired: {appActivity: com.google.android.youtube...., appPackage: com.google.android.youtube, autoAcceptAlerts: true, autoGrantPermissions: true, fullReset: false, noReset: true, platformName: android, uiautomator2ServerInstallTimeout: 60000}, deviceApiLevel: 26, deviceManufacturer: Lenovo, deviceModel: A6020a40, deviceName: 1578fc7b, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: 1578fc7b, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, noReset: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 8.0.0, statBarHeight: 48, takesScreenshot: true, uiautomator2ServerInstallTimeout: 60000, viewportRect: {height: 1232, left: 0, top: 48, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: cebfaeac-5d48-4594-95c9-e6da3697d915
*** Element info: {Using=-android uiautomator, value=new UiScrollable(new UiSelector().scrollable(true)).scrollIntoView(new UiSelector().descriptionContains("Official Trailer"));}
	at jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at io.appium.java_client.FindsByAndroidUIAutomator.findElementByAndroidUIAutomator(FindsByAndroidUIAutomator.java:38)
	at io.appium.java_client.MobileBy$ByAndroidUIAutomator.findElement(MobileBy.java:210)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:182)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:179)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
	... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- playTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.YouTubeTests_PlayVideo@48974e45]" started-at="2021-08-20T16:12:29Z" name="restart" finished-at="2021-08-20T16:12:30Z" duration-ms="572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=playTest status=FAILURE method=YouTubeTests_PlayVideo.playTest()[pri:0, instance:iiitd.nrl.evalapp.YouTubeTests_PlayVideo@48974e45] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.YouTubeTests_PlayVideo -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@247d8ae]" started-at="2021-08-20T16:09:45Z" name="launchCap" finished-at="2021-08-20T16:10:01Z" duration-ms="15584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@247d8ae]" started-at="2021-08-20T16:10:01Z" name="copyTrakBytes" finished-at="2021-08-20T16:10:05Z" duration-ms="3830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@247d8ae]" started-at="2021-08-20T16:10:05Z" name="restart" finished-at="2021-08-20T16:10:05Z" duration-ms="408" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@247d8ae] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
    </test> <!-- Youtube_PlayVideoTest -->
  </suite> <!-- Youtube_PlayVideoSuite -->
  <suite started-at="2021-08-20T10:30:33Z" name="LinkedInTests_profileSuite" finished-at="2021-08-20T10:33:31Z" duration-ms="177988">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:30:33Z" name="LinkedInTests_profileTest" finished-at="2021-08-20T10:33:31Z" duration-ms="177988">
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@378542de]" started-at="2021-08-20T16:03:14Z" name="launchCap" finished-at="2021-08-20T16:03:26Z" duration-ms="12047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@378542de]" started-at="2021-08-20T16:03:26Z" name="copyTrakBytes" finished-at="2021-08-20T16:03:30Z" duration-ms="3899" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@378542de]" started-at="2021-08-20T16:03:30Z" name="restart" finished-at="2021-08-20T16:03:31Z" duration-ms="433" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@378542de] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@74455848]" started-at="2021-08-20T16:00:33Z" name="launchCap" finished-at="2021-08-20T16:00:46Z" duration-ms="13008" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@74455848]" started-at="2021-08-20T16:00:46Z" name="copyTrakBytes" finished-at="2021-08-20T16:00:50Z" duration-ms="3877" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@74455848]" started-at="2021-08-20T16:00:50Z" name="restart" finished-at="2021-08-20T16:00:50Z" duration-ms="373" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@74455848] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
      <class name="iiitd.nrl.evalapp.LinkedInTests_profile">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests_profile@e7edb54]" started-at="2021-08-20T16:00:50Z" name="launchCap" finished-at="2021-08-20T16:01:06Z" duration-ms="16128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="viewProfile()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests_profile@e7edb54]" started-at="2021-08-20T16:01:06Z" name="viewProfile" finished-at="2021-08-20T16:03:14Z" duration-ms="127784" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.id: com.linkedin.android:id/profile_top_card_profile_picture (tried for 120 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.id: com.linkedin.android:id/profile_top_card_profile_picture (tried for 120 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
	at iiitd.nrl.evalapp.LinkedInTests_profile.viewProfile(LinkedInTests_profile.java:95)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at iiitd.nrl.evalapp.MainLauncher.main(MainLauncher.java:237)
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-FU6EMRP', ip: '192.168.56.1', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.12'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.linkedin.android.authen..., appPackage: com.linkedin.android, autoAcceptAlerts: true, autoGrantPermissions: true, databaseEnabled: false, desired: {appActivity: com.linkedin.android.authen..., appPackage: com.linkedin.android, autoAcceptAlerts: true, autoGrantPermissions: true, fullReset: false, noReset: true, platformName: android, uiautomator2ServerInstallTimeout: 60000}, deviceApiLevel: 26, deviceManufacturer: Lenovo, deviceModel: A6020a40, deviceName: 1578fc7b, deviceScreenDensity: 320, deviceScreenSize: 720x1280, deviceUDID: 1578fc7b, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, noReset: true, pixelRatio: 2, platform: LINUX, platformName: Android, platformVersion: 8.0.0, statBarHeight: 48, takesScreenshot: true, uiautomator2ServerInstallTimeout: 60000, viewportRect: {height: 1232, left: 0, top: 48, width: 720}, warnings: {}, webStorageEnabled: false}
Session ID: 7414bef3-b2f0-4bab-9f64-c6c3c016c2d2
*** Element info: {Using=id, value=com.linkedin.android:id/profile_top_card_profile_picture}
	at jdk.internal.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)
	at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:69)
	at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElementById(AndroidDriver.java:1)
	at org.openqa.selenium.By$ById.findElement(By.java:188)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:205)
	at org.openqa.selenium.support.ui.ExpectedConditions$7.apply(ExpectedConditions.java:201)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
	... 24 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewProfile -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests_profile@e7edb54]" started-at="2021-08-20T16:03:14Z" name="restart" finished-at="2021-08-20T16:03:14Z" duration-ms="437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewProfile status=FAILURE method=LinkedInTests_profile.viewProfile()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests_profile@e7edb54] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.LinkedInTests_profile -->
    </test> <!-- LinkedInTests_profileTest -->
  </suite> <!-- LinkedInTests_profileSuite -->
  <suite started-at="2021-08-20T10:42:48Z" name="PingSuite" finished-at="2021-08-20T10:42:48Z" duration-ms="2">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:42:48Z" name="PingTest" finished-at="2021-08-20T10:42:48Z" duration-ms="2">
      <class name="iiitd.nrl.evalapp.PingUpload">
        <test-method signature="dummyTest()[pri:0, instance:iiitd.nrl.evalapp.PingUpload@932bc4a]" started-at="2021-08-20T16:12:48Z" name="dummyTest" finished-at="2021-08-20T16:12:48Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dummyTest -->
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.PingUpload@932bc4a]" started-at="2021-08-20T16:12:48Z" name="launchCap" finished-at="2021-08-20T16:12:48Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
      </class> <!-- iiitd.nrl.evalapp.PingUpload -->
    </test> <!-- PingTest -->
  </suite> <!-- PingSuite -->
  <suite started-at="2021-08-20T10:13:00Z" name="FacebookTests_postSuite" finished-at="2021-08-20T10:14:32Z" duration-ms="91947">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:13:00Z" name="FacebookTests_postTest" finished-at="2021-08-20T10:14:32Z" duration-ms="91947">
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@68267da0]" started-at="2021-08-20T15:44:13Z" name="launchCap" finished-at="2021-08-20T15:44:28Z" duration-ms="14256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@68267da0]" started-at="2021-08-20T15:44:28Z" name="copyTrakBytes" finished-at="2021-08-20T15:44:31Z" duration-ms="3801" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@68267da0]" started-at="2021-08-20T15:44:31Z" name="restart" finished-at="2021-08-20T15:44:32Z" duration-ms="1079" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@68267da0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@2898ac89]" started-at="2021-08-20T15:43:01Z" name="launchCap" finished-at="2021-08-20T15:43:26Z" duration-ms="25332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@2898ac89]" started-at="2021-08-20T15:43:26Z" name="copyTrakBytes" finished-at="2021-08-20T15:43:30Z" duration-ms="3648" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@2898ac89]" started-at="2021-08-20T15:43:30Z" name="restart" finished-at="2021-08-20T15:43:30Z" duration-ms="515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@2898ac89] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
      <class name="iiitd.nrl.evalapp.FacebookTestsP">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.FacebookTestsP@683dbc2c]" started-at="2021-08-20T15:43:30Z" name="launchCap" finished-at="2021-08-20T15:43:43Z" duration-ms="12931" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="postGroup()[pri:0, instance:iiitd.nrl.evalapp.FacebookTestsP@683dbc2c]" started-at="2021-08-20T15:43:43Z" name="postGroup" finished-at="2021-08-20T15:44:13Z" duration-ms="29721" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postGroup -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.FacebookTestsP@683dbc2c]" started-at="2021-08-20T15:44:13Z" name="restart" finished-at="2021-08-20T15:44:13Z" duration-ms="622" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=postGroup status=SUCCESS method=FacebookTestsP.postGroup()[pri:0, instance:iiitd.nrl.evalapp.FacebookTestsP@683dbc2c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="update()[pri:0, instance:iiitd.nrl.evalapp.FacebookTestsP@683dbc2c]" started-at="2021-08-20T15:44:13Z" name="update" finished-at="2021-08-20T15:44:13Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
      </class> <!-- iiitd.nrl.evalapp.FacebookTestsP -->
    </test> <!-- FacebookTests_postTest -->
  </suite> <!-- FacebookTests_postSuite -->
  <suite started-at="2021-08-20T10:38:30Z" name="Youtube_SearchSuite" finished-at="2021-08-20T10:39:45Z" duration-ms="75617">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:38:30Z" name="Youtube_SearchTest" finished-at="2021-08-20T10:39:45Z" duration-ms="75617">
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@a2431d0]" started-at="2021-08-20T16:09:26Z" name="launchCap" finished-at="2021-08-20T16:09:41Z" duration-ms="15608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@a2431d0]" started-at="2021-08-20T16:09:41Z" name="copyTrakBytes" finished-at="2021-08-20T16:09:45Z" duration-ms="3812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@a2431d0]" started-at="2021-08-20T16:09:45Z" name="restart" finished-at="2021-08-20T16:09:45Z" duration-ms="437" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@a2431d0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@34f5090e]" started-at="2021-08-20T16:08:30Z" name="launchCap" finished-at="2021-08-20T16:08:43Z" duration-ms="13158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@34f5090e]" started-at="2021-08-20T16:08:43Z" name="copyTrakBytes" finished-at="2021-08-20T16:08:47Z" duration-ms="3805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@34f5090e]" started-at="2021-08-20T16:08:47Z" name="restart" finished-at="2021-08-20T16:08:47Z" duration-ms="477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@34f5090e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
      <class name="iiitd.nrl.evalapp.YouTubeTest_SearchChannel">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.YouTubeTest_SearchChannel@31e5415e]" started-at="2021-08-20T16:08:47Z" name="launchCap" finished-at="2021-08-20T16:09:04Z" duration-ms="16903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="channelTest()[pri:0, instance:iiitd.nrl.evalapp.YouTubeTest_SearchChannel@31e5415e]" started-at="2021-08-20T16:09:04Z" name="channelTest" finished-at="2021-08-20T16:09:25Z" duration-ms="20439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.YouTubeTest_SearchChannel@31e5415e]" started-at="2021-08-20T16:09:25Z" name="restart" finished-at="2021-08-20T16:09:26Z" duration-ms="976" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=channelTest status=SUCCESS method=YouTubeTest_SearchChannel.channelTest()[pri:0, instance:iiitd.nrl.evalapp.YouTubeTest_SearchChannel@31e5415e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.YouTubeTest_SearchChannel -->
    </test> <!-- Youtube_SearchTest -->
  </suite> <!-- Youtube_SearchSuite -->
  <suite started-at="2021-08-20T10:25:45Z" name="GooglenewsTestsSuite" finished-at="2021-08-20T10:27:03Z" duration-ms="78034">
    <groups>
    </groups>
    <test started-at="2021-08-20T10:25:45Z" name="GooglenewsTestsTest" finished-at="2021-08-20T10:27:03Z" duration-ms="78034">
      <class name="iiitd.nrl.evalapp.TrakBytesUpload">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@366647c2]" started-at="2021-08-20T15:56:43Z" name="launchCap" finished-at="2021-08-20T15:56:59Z" duration-ms="15686" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@366647c2]" started-at="2021-08-20T15:56:59Z" name="copyTrakBytes" finished-at="2021-08-20T15:57:03Z" duration-ms="3923" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@366647c2]" started-at="2021-08-20T15:57:03Z" name="restart" finished-at="2021-08-20T15:57:03Z" duration-ms="401" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesUpload.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesUpload@366647c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesUpload -->
      <class name="iiitd.nrl.evalapp.GooglenewsTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.GooglenewsTests@482bce4f]" started-at="2021-08-20T15:56:04Z" name="launchCap" finished-at="2021-08-20T15:56:19Z" duration-ms="14397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="searchTest()[pri:0, instance:iiitd.nrl.evalapp.GooglenewsTests@482bce4f]" started-at="2021-08-20T15:56:19Z" name="searchTest" finished-at="2021-08-20T15:56:43Z" duration-ms="24197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.GooglenewsTests@482bce4f]" started-at="2021-08-20T15:56:43Z" name="restart" finished-at="2021-08-20T15:56:43Z" duration-ms="553" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchTest status=SUCCESS method=GooglenewsTests.searchTest()[pri:0, instance:iiitd.nrl.evalapp.GooglenewsTests@482bce4f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="update()[pri:0, instance:iiitd.nrl.evalapp.GooglenewsTests@482bce4f]" started-at="2021-08-20T15:56:43Z" name="update" finished-at="2021-08-20T15:56:43Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
      </class> <!-- iiitd.nrl.evalapp.GooglenewsTests -->
      <class name="iiitd.nrl.evalapp.TrakBytesData">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@55b53d44]" started-at="2021-08-20T15:55:45Z" name="launchCap" finished-at="2021-08-20T15:56:00Z" duration-ms="14600" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@55b53d44]" started-at="2021-08-20T15:56:00Z" name="copyTrakBytes" finished-at="2021-08-20T15:56:04Z" duration-ms="3881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyTrakBytes -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@55b53d44]" started-at="2021-08-20T15:56:04Z" name="restart" finished-at="2021-08-20T15:56:04Z" duration-ms="394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=copyTrakBytes status=SUCCESS method=TrakBytesData.copyTrakBytes()[pri:0, instance:iiitd.nrl.evalapp.TrakBytesData@55b53d44] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
      </class> <!-- iiitd.nrl.evalapp.TrakBytesData -->
    </test> <!-- GooglenewsTestsTest -->
  </suite> <!-- GooglenewsTestsSuite -->
</testng-results>
