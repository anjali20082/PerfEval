<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="23" passed="22" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-10-22T10:26:18Z" name="AppSuite" finished-at="2020-10-22T10:36:36Z" duration-ms="617498">
    <groups>
    </groups>
    <test started-at="2020-10-22T10:26:18Z" name="AppiumTests" finished-at="2020-10-22T10:36:36Z" duration-ms="617498">
      <class name="iiitd.nrl.evalapp.DailyhuntTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.DailyhuntTests@64917561]" started-at="2020-10-22T15:59:59Z" name="launchCap" finished-at="2020-10-22T16:00:06Z" duration-ms="6955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="livetvTest()[pri:0, instance:iiitd.nrl.evalapp.DailyhuntTests@64917561]" started-at="2020-10-22T16:00:06Z" name="livetvTest" finished-at="2020-10-22T16:00:14Z" duration-ms="8071" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- livetvTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.DailyhuntTests@64917561]" started-at="2020-10-22T16:00:14Z" name="restart" finished-at="2020-10-22T16:00:15Z" duration-ms="700" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=livetvTest status=SUCCESS method=DailyhuntTests.livetvTest()[pri:0, instance:iiitd.nrl.evalapp.DailyhuntTests@64917561] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.DailyhuntTests@64917561]" started-at="2020-10-22T16:00:15Z" name="launchCap" finished-at="2020-10-22T16:00:23Z" duration-ms="7416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="searchTest()[pri:0, instance:iiitd.nrl.evalapp.DailyhuntTests@64917561]" started-at="2020-10-22T16:00:23Z" name="searchTest" finished-at="2020-10-22T16:00:32Z" duration-ms="9787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.DailyhuntTests@64917561]" started-at="2020-10-22T16:00:32Z" name="restart" finished-at="2020-10-22T16:00:33Z" duration-ms="679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchTest status=SUCCESS method=DailyhuntTests.searchTest()[pri:0, instance:iiitd.nrl.evalapp.DailyhuntTests@64917561] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="update()[pri:0, instance:iiitd.nrl.evalapp.DailyhuntTests@64917561]" started-at="2020-10-22T16:00:33Z" name="update" finished-at="2020-10-22T16:00:33Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
      </class> <!-- iiitd.nrl.evalapp.DailyhuntTests -->
      <class name="iiitd.nrl.evalapp.FacebookTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.FacebookTests@4d3e022f]" started-at="2020-10-22T16:01:41Z" name="launchCap" finished-at="2020-10-22T16:01:48Z" duration-ms="6995" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="followUnfollow()[pri:0, instance:iiitd.nrl.evalapp.FacebookTests@4d3e022f]" started-at="2020-10-22T16:01:48Z" name="followUnfollow" finished-at="2020-10-22T16:02:05Z" duration-ms="17155" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for presence of element located by: By.AndroidUIAutomator: new UiSelector().descriptionMatches("(?i)Kangana Ranaut Page · Artist · Actor · KanganaRanaut · 2M like this(?-i)") (tried for 10 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for presence of element located by: By.AndroidUIAutomator: new UiSelector().descriptionMatches("(?i)Kangana Ranaut Page · Artist · Actor · KanganaRanaut · 2M like this(?-i)") (tried for 10 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
	at iiitd.nrl.evalapp.FacebookTests.followUnfollow(FacebookTests.java:130)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at iiitd.nrl.evalapp.Main.clickRun(Main.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.sun.javafx.reflect.Trampoline.invoke(MethodUtil.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.sun.javafx.reflect.MethodUtil.invoke(MethodUtil.java:273)
	at com.sun.javafx.fxml.MethodHelper.invoke(MethodHelper.java:83)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1782)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1670)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8879)
	at javafx.scene.control.Button.fire(Button.java:200)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:206)
	at com.sun.javafx.scene.control.inputmap.InputMap.handle(InputMap.java:274)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3851)
	at javafx.scene.Scene$MouseHandler.access$1200(Scene.java:3579)
	at javafx.scene.Scene.processMouseEvent(Scene.java:1849)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2588)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:397)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$2(GlassViewEventHandler.java:434)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:390)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:433)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:556)
	at com.sun.glass.ui.View.notifyMouse(View.java:942)
	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method)
	at com.sun.glass.ui.gtk.GtkApplication.lambda$runLoop$11(GtkApplication.java:277)
	at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.openqa.selenium.NoSuchElementException: An element could not be located on the page using the given search parameters.
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'prince-Lenovo-Legion', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '5.4.0-52-generic', java.version: '11.0.8'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {appActivity: com.facebook.katana.activit..., appPackage: com.facebook.katana, databaseEnabled: false, desired: {appActivity: com.facebook.katana.activit..., appPackage: com.facebook.katana, fullReset: false, noReset: true, platformName: android}, deviceApiLevel: 30, deviceManufacturer: Google, deviceModel: Pixel 3a, deviceName: 95TAY0VNB4, deviceScreenDensity: 490, deviceScreenSize: 1080x2220, deviceUDID: 95TAY0VNB4, fullReset: false, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, noReset: true, pixelRatio: 3.0625, platform: LINUX, platformName: Android, platformVersion: 11, statBarHeight: 74, takesScreenshot: true, viewportRect: {height: 1999, left: 0, top: 74, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 50df8f02-18d0-404d-a16f-a51f87d8b48b
*** Element info: {Using=-android uiautomator, value=new UiSelector().descriptionMatches("(?i)Kangana Ranaut Page · Artist · Actor · KanganaRanaut · 2M like this(?-i)")}
	at jdk.internal.reflect.GeneratedConstructorAccessor33.newInstance(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:61)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at io.appium.java_client.FindsByAndroidUIAutomator.findElementByAndroidUIAutomator(FindsByAndroidUIAutomator.java:38)
	at io.appium.java_client.MobileBy$ByAndroidUIAutomator.findElement(MobileBy.java:210)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
	at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:57)
	at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
	at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:182)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:179)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
	... 83 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- followUnfollow -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.FacebookTests@4d3e022f]" started-at="2020-10-22T16:02:05Z" name="restart" finished-at="2020-10-22T16:02:06Z" duration-ms="800" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=followUnfollow status=FAILURE method=FacebookTests.followUnfollow()[pri:0, instance:iiitd.nrl.evalapp.FacebookTests@4d3e022f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.FacebookTests@4d3e022f]" started-at="2020-10-22T16:02:06Z" name="launchCap" finished-at="2020-10-22T16:02:12Z" duration-ms="6535" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="postGroup()[pri:0, instance:iiitd.nrl.evalapp.FacebookTests@4d3e022f]" started-at="2020-10-22T16:02:12Z" name="postGroup" finished-at="2020-10-22T16:02:25Z" duration-ms="12826" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postGroup -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.FacebookTests@4d3e022f]" started-at="2020-10-22T16:02:25Z" name="restart" finished-at="2020-10-22T16:02:26Z" duration-ms="720" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=postGroup status=SUCCESS method=FacebookTests.postGroup()[pri:0, instance:iiitd.nrl.evalapp.FacebookTests@4d3e022f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.FacebookTests@4d3e022f]" started-at="2020-10-22T16:02:26Z" name="launchCap" finished-at="2020-10-22T16:02:33Z" duration-ms="6751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="searchPerson()[pri:0, instance:iiitd.nrl.evalapp.FacebookTests@4d3e022f]" started-at="2020-10-22T16:02:33Z" name="searchPerson" finished-at="2020-10-22T16:02:41Z" duration-ms="8083" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchPerson -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.FacebookTests@4d3e022f]" started-at="2020-10-22T16:02:41Z" name="restart" finished-at="2020-10-22T16:02:41Z" duration-ms="621" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchPerson status=SUCCESS method=FacebookTests.searchPerson()[pri:0, instance:iiitd.nrl.evalapp.FacebookTests@4d3e022f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="update()[pri:0, instance:iiitd.nrl.evalapp.FacebookTests@4d3e022f]" started-at="2020-10-22T16:02:41Z" name="update" finished-at="2020-10-22T16:02:41Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
      </class> <!-- iiitd.nrl.evalapp.FacebookTests -->
      <class name="iiitd.nrl.evalapp.AmazonPayTest">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.AmazonPayTest@48891bc7]" started-at="2020-10-22T16:05:06Z" name="launchCap" finished-at="2020-10-22T16:05:13Z" duration-ms="6960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="payUsingAmazonPay()[pri:0, instance:iiitd.nrl.evalapp.AmazonPayTest@48891bc7]" started-at="2020-10-22T16:05:13Z" name="payUsingAmazonPay" finished-at="2020-10-22T16:05:39Z" duration-ms="26169" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- payUsingAmazonPay -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.AmazonPayTest@48891bc7]" started-at="2020-10-22T16:05:39Z" name="restart" finished-at="2020-10-22T16:05:39Z" duration-ms="723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=payUsingAmazonPay status=SUCCESS method=AmazonPayTest.payUsingAmazonPay()[pri:0, instance:iiitd.nrl.evalapp.AmazonPayTest@48891bc7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="update()[pri:0, instance:iiitd.nrl.evalapp.AmazonPayTest@48891bc7]" started-at="2020-10-22T16:05:39Z" name="update" finished-at="2020-10-22T16:05:39Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
      </class> <!-- iiitd.nrl.evalapp.AmazonPayTest -->
      <class name="iiitd.nrl.evalapp.HotstarTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests@2f6fe170]" started-at="2020-10-22T15:57:00Z" name="launchCap" finished-at="2020-10-22T15:57:07Z" duration-ms="6848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="addWatchlistTest()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests@2f6fe170]" started-at="2020-10-22T15:57:07Z" name="addWatchlistTest" finished-at="2020-10-22T15:57:19Z" duration-ms="11646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addWatchlistTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.HotstarTests@2f6fe170]" started-at="2020-10-22T15:57:19Z" name="restart" finished-at="2020-10-22T15:57:19Z" duration-ms="620" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addWatchlistTest status=SUCCESS method=HotstarTests.addWatchlistTest()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests@2f6fe170] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests@2f6fe170]" started-at="2020-10-22T15:57:19Z" name="launchCap" finished-at="2020-10-22T15:57:25Z" duration-ms="6156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="searchTest()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests@2f6fe170]" started-at="2020-10-22T15:57:25Z" name="searchTest" finished-at="2020-10-22T15:57:34Z" duration-ms="8854" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.HotstarTests@2f6fe170]" started-at="2020-10-22T15:57:34Z" name="restart" finished-at="2020-10-22T15:57:35Z" duration-ms="811" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchTest status=SUCCESS method=HotstarTests.searchTest()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests@2f6fe170] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests@2f6fe170]" started-at="2020-10-22T15:57:35Z" name="launchCap" finished-at="2020-10-22T15:57:41Z" duration-ms="6424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="trendingTest()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests@2f6fe170]" started-at="2020-10-22T15:57:41Z" name="trendingTest" finished-at="2020-10-22T15:57:50Z" duration-ms="8401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- trendingTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.HotstarTests@2f6fe170]" started-at="2020-10-22T15:57:50Z" name="restart" finished-at="2020-10-22T15:57:51Z" duration-ms="689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=trendingTest status=SUCCESS method=HotstarTests.trendingTest()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests@2f6fe170] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="update()[pri:0, instance:iiitd.nrl.evalapp.HotstarTests@2f6fe170]" started-at="2020-10-22T15:57:51Z" name="update" finished-at="2020-10-22T15:57:51Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
      </class> <!-- iiitd.nrl.evalapp.HotstarTests -->
      <class name="iiitd.nrl.evalapp.AmazonTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.AmazonTests@56ad999]" started-at="2020-10-22T16:03:15Z" name="launchCap" finished-at="2020-10-22T16:03:22Z" duration-ms="7430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="searchTest()[pri:0, instance:iiitd.nrl.evalapp.AmazonTests@56ad999]" started-at="2020-10-22T16:03:22Z" name="searchTest" finished-at="2020-10-22T16:04:49Z" duration-ms="87073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.AmazonTests@56ad999]" started-at="2020-10-22T16:04:49Z" name="restart" finished-at="2020-10-22T16:04:50Z" duration-ms="614" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchTest status=SUCCESS method=AmazonTests.searchTest()[pri:0, instance:iiitd.nrl.evalapp.AmazonTests@56ad999] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.AmazonTests@56ad999]" started-at="2020-10-22T16:04:50Z" name="launchCap" finished-at="2020-10-22T16:04:57Z" duration-ms="7035" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="deleteFromCartTest()[pri:0, instance:iiitd.nrl.evalapp.AmazonTests@56ad999]" started-at="2020-10-22T16:04:57Z" name="deleteFromCartTest" finished-at="2020-10-22T16:05:05Z" depends-on-methods="iiitd.nrl.evalapp.AmazonTests.searchTest" duration-ms="8280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteFromCartTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.AmazonTests@56ad999]" started-at="2020-10-22T16:05:05Z" name="restart" finished-at="2020-10-22T16:05:06Z" duration-ms="578" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteFromCartTest status=SUCCESS method=AmazonTests.deleteFromCartTest()[pri:0, instance:iiitd.nrl.evalapp.AmazonTests@56ad999] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="update()[pri:0, instance:iiitd.nrl.evalapp.AmazonTests@56ad999]" started-at="2020-10-22T16:05:06Z" name="update" finished-at="2020-10-22T16:05:06Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
      </class> <!-- iiitd.nrl.evalapp.AmazonTests -->
      <class name="iiitd.nrl.evalapp.GooglenewsTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.GooglenewsTests@2fd11ef4]" started-at="2020-10-22T15:57:51Z" name="launchCap" finished-at="2020-10-22T15:57:57Z" duration-ms="5959" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="headlinesTest()[pri:0, instance:iiitd.nrl.evalapp.GooglenewsTests@2fd11ef4]" started-at="2020-10-22T15:57:57Z" name="headlinesTest" finished-at="2020-10-22T15:59:33Z" duration-ms="96871" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headlinesTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.GooglenewsTests@2fd11ef4]" started-at="2020-10-22T15:59:33Z" name="restart" finished-at="2020-10-22T15:59:34Z" duration-ms="825" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=headlinesTest status=SUCCESS method=GooglenewsTests.headlinesTest()[pri:0, instance:iiitd.nrl.evalapp.GooglenewsTests@2fd11ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.GooglenewsTests@2fd11ef4]" started-at="2020-10-22T15:59:34Z" name="launchCap" finished-at="2020-10-22T15:59:40Z" duration-ms="6079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="searchTest()[pri:0, instance:iiitd.nrl.evalapp.GooglenewsTests@2fd11ef4]" started-at="2020-10-22T15:59:40Z" name="searchTest" finished-at="2020-10-22T15:59:59Z" duration-ms="18452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.GooglenewsTests@2fd11ef4]" started-at="2020-10-22T15:59:59Z" name="restart" finished-at="2020-10-22T15:59:59Z" duration-ms="682" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchTest status=SUCCESS method=GooglenewsTests.searchTest()[pri:0, instance:iiitd.nrl.evalapp.GooglenewsTests@2fd11ef4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="update()[pri:0, instance:iiitd.nrl.evalapp.GooglenewsTests@2fd11ef4]" started-at="2020-10-22T15:59:59Z" name="update" finished-at="2020-10-22T15:59:59Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
      </class> <!-- iiitd.nrl.evalapp.GooglenewsTests -->
      <class name="iiitd.nrl.evalapp.MobikwikTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.MobikwikTests@63acfb61]" started-at="2020-10-22T16:06:05Z" name="launchCap" finished-at="2020-10-22T16:06:13Z" duration-ms="8345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="SendMoneyFromWallet()[pri:0, instance:iiitd.nrl.evalapp.MobikwikTests@63acfb61]" started-at="2020-10-22T16:06:13Z" name="SendMoneyFromWallet" finished-at="2020-10-22T16:06:35Z" duration-ms="21837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendMoneyFromWallet -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.MobikwikTests@63acfb61]" started-at="2020-10-22T16:06:35Z" name="restart" finished-at="2020-10-22T16:06:36Z" duration-ms="368" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SendMoneyFromWallet status=SUCCESS method=MobikwikTests.SendMoneyFromWallet()[pri:0, instance:iiitd.nrl.evalapp.MobikwikTests@63acfb61] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="update()[pri:0, instance:iiitd.nrl.evalapp.MobikwikTests@63acfb61]" started-at="2020-10-22T16:06:36Z" name="update" finished-at="2020-10-22T16:06:36Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
      </class> <!-- iiitd.nrl.evalapp.MobikwikTests -->
      <class name="iiitd.nrl.evalapp.PaytmTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.PaytmTests@759b5783]" started-at="2020-10-22T16:05:39Z" name="launchCap" finished-at="2020-10-22T16:05:46Z" duration-ms="6552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="paySomeone()[pri:0, instance:iiitd.nrl.evalapp.PaytmTests@759b5783]" started-at="2020-10-22T16:05:46Z" name="paySomeone" finished-at="2020-10-22T16:06:04Z" duration-ms="18333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- paySomeone -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.PaytmTests@759b5783]" started-at="2020-10-22T16:06:04Z" name="restart" finished-at="2020-10-22T16:06:05Z" duration-ms="740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=paySomeone status=SUCCESS method=PaytmTests.paySomeone()[pri:0, instance:iiitd.nrl.evalapp.PaytmTests@759b5783] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="update()[pri:0, instance:iiitd.nrl.evalapp.PaytmTests@759b5783]" started-at="2020-10-22T16:06:05Z" name="update" finished-at="2020-10-22T16:06:05Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
      </class> <!-- iiitd.nrl.evalapp.PaytmTests -->
      <class name="iiitd.nrl.evalapp.FlipkartTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.FlipkartTests@6a3f83c2]" started-at="2020-10-22T16:02:41Z" name="launchCap" finished-at="2020-10-22T16:02:48Z" duration-ms="6452" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="searchTest()[pri:0, instance:iiitd.nrl.evalapp.FlipkartTests@6a3f83c2]" started-at="2020-10-22T16:02:48Z" name="searchTest" finished-at="2020-10-22T16:03:01Z" duration-ms="13151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.FlipkartTests@6a3f83c2]" started-at="2020-10-22T16:03:01Z" name="restart" finished-at="2020-10-22T16:03:01Z" duration-ms="571" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchTest status=SUCCESS method=FlipkartTests.searchTest()[pri:0, instance:iiitd.nrl.evalapp.FlipkartTests@6a3f83c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.FlipkartTests@6a3f83c2]" started-at="2020-10-22T16:03:01Z" name="launchCap" finished-at="2020-10-22T16:03:08Z" duration-ms="6328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="deleteFromCartTest()[pri:0, instance:iiitd.nrl.evalapp.FlipkartTests@6a3f83c2]" started-at="2020-10-22T16:03:08Z" name="deleteFromCartTest" finished-at="2020-10-22T16:03:14Z" depends-on-methods="iiitd.nrl.evalapp.FlipkartTests.searchTest" duration-ms="6220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteFromCartTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.FlipkartTests@6a3f83c2]" started-at="2020-10-22T16:03:14Z" name="restart" finished-at="2020-10-22T16:03:15Z" duration-ms="650" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=deleteFromCartTest status=SUCCESS method=FlipkartTests.deleteFromCartTest()[pri:0, instance:iiitd.nrl.evalapp.FlipkartTests@6a3f83c2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="update()[pri:0, instance:iiitd.nrl.evalapp.FlipkartTests@6a3f83c2]" started-at="2020-10-22T16:03:15Z" name="update" finished-at="2020-10-22T16:03:15Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
      </class> <!-- iiitd.nrl.evalapp.FlipkartTests -->
      <class name="iiitd.nrl.evalapp.YouTubeTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.YouTubeTests@115d17f3]" started-at="2020-10-22T15:56:18Z" name="launchCap" finished-at="2020-10-22T15:56:30Z" duration-ms="12264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="channelTest()[pri:0, instance:iiitd.nrl.evalapp.YouTubeTests@115d17f3]" started-at="2020-10-22T15:56:30Z" name="channelTest" finished-at="2020-10-22T15:56:42Z" duration-ms="11301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- channelTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.YouTubeTests@115d17f3]" started-at="2020-10-22T15:56:42Z" name="restart" finished-at="2020-10-22T15:56:43Z" duration-ms="785" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=channelTest status=SUCCESS method=YouTubeTests.channelTest()[pri:0, instance:iiitd.nrl.evalapp.YouTubeTests@115d17f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.YouTubeTests@115d17f3]" started-at="2020-10-22T15:56:43Z" name="launchCap" finished-at="2020-10-22T15:56:49Z" duration-ms="6754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="playTest()[pri:0, instance:iiitd.nrl.evalapp.YouTubeTests@115d17f3]" started-at="2020-10-22T15:56:49Z" name="playTest" finished-at="2020-10-22T15:56:59Z" duration-ms="10205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- playTest -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.YouTubeTests@115d17f3]" started-at="2020-10-22T15:56:59Z" name="restart" finished-at="2020-10-22T15:57:00Z" duration-ms="618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=playTest status=SUCCESS method=YouTubeTests.playTest()[pri:0, instance:iiitd.nrl.evalapp.YouTubeTests@115d17f3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="update()[pri:0, instance:iiitd.nrl.evalapp.YouTubeTests@115d17f3]" started-at="2020-10-22T15:57:00Z" name="update" finished-at="2020-10-22T15:57:00Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
      </class> <!-- iiitd.nrl.evalapp.YouTubeTests -->
      <class name="iiitd.nrl.evalapp.LinkedInTests">
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f]" started-at="2020-10-22T16:00:33Z" name="launchCap" finished-at="2020-10-22T16:00:41Z" duration-ms="7700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="myConnections()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f]" started-at="2020-10-22T16:00:41Z" name="myConnections" finished-at="2020-10-22T16:00:48Z" duration-ms="7479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myConnections -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f]" started-at="2020-10-22T16:00:48Z" name="restart" finished-at="2020-10-22T16:00:49Z" duration-ms="647" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=myConnections status=SUCCESS method=LinkedInTests.myConnections()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f]" started-at="2020-10-22T16:00:49Z" name="launchCap" finished-at="2020-10-22T16:00:55Z" duration-ms="6356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="searchPerson()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f]" started-at="2020-10-22T16:00:55Z" name="searchPerson" finished-at="2020-10-22T16:01:07Z" duration-ms="11583" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchPerson -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f]" started-at="2020-10-22T16:01:07Z" name="restart" finished-at="2020-10-22T16:01:07Z" duration-ms="635" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchPerson status=SUCCESS method=LinkedInTests.searchPerson()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f]" started-at="2020-10-22T16:01:07Z" name="launchCap" finished-at="2020-10-22T16:01:14Z" duration-ms="6640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="sendMessage()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f]" started-at="2020-10-22T16:01:14Z" name="sendMessage" finished-at="2020-10-22T16:01:25Z" duration-ms="10799" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sendMessage -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f]" started-at="2020-10-22T16:01:25Z" name="restart" finished-at="2020-10-22T16:01:25Z" duration-ms="612" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sendMessage status=SUCCESS method=LinkedInTests.sendMessage()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="launchCap()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f]" started-at="2020-10-22T16:01:25Z" name="launchCap" finished-at="2020-10-22T16:01:32Z" duration-ms="6669" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchCap -->
        <test-method signature="viewProfile()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f]" started-at="2020-10-22T16:01:32Z" name="viewProfile" finished-at="2020-10-22T16:01:40Z" duration-ms="7836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- viewProfile -->
        <test-method is-config="true" signature="restart(org.testng.ITestResult)[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f]" started-at="2020-10-22T16:01:40Z" name="restart" finished-at="2020-10-22T16:01:41Z" duration-ms="764" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=viewProfile status=SUCCESS method=LinkedInTests.viewProfile()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- restart -->
        <test-method is-config="true" signature="update()[pri:0, instance:iiitd.nrl.evalapp.LinkedInTests@1d8a048f]" started-at="2020-10-22T16:01:41Z" name="update" finished-at="2020-10-22T16:01:41Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- update -->
      </class> <!-- iiitd.nrl.evalapp.LinkedInTests -->
    </test> <!-- AppiumTests -->
  </suite> <!-- AppSuite -->
</testng-results>
